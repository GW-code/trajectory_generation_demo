function [cost, g] = constFunc(p, B, dB, n, gaussw)
cost = 0;
g = zeros(length(p), 1);
N = length(gaussw);
id_u = sum(n(1:3))+1;
pphi = p(id_u:sum(n(1:4)));
tf = p(length(p));
w = 10;
for i=1:N
    phi = B.u(i, :) * pphi;
    dphi = dB.u(i, :) * pphi / tf;
    cost = cost + gaussw(i)*(phi^2 + w*dphi^2);
    g(id_u:sum(n(1:4))) = g(id_u:sum(n(1:4))) + ... 
        2 * gaussw(i) * (phi * (B.u(i, :))' + w*dphi * (dB.u(i, :))');
%     g(id_u:sum(n(1:4))) = g(id_u:sum(n(1:4))) + 2 * gaussw(i) * phi * (B.u(i, :))';
end
g(id_u:sum(n(1:4))) = g(id_u:sum(n(1:4))) * tf / 2;
g(length(p)) = cost / 2 + 0.01;
cost = tf/2*cost + 0.01*tf;
