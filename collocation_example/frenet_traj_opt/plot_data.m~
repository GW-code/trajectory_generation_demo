
d = p(1:discrete_num);
phi = p(discrete_num+1 : 2*discrete_num);
kappa = p(2*discrete_num+1 : 3*discrete_num);
path = frenetToCartesian(d, phi, ref_path(:, 1:2), ref_path(:, 3));

% figure('Name', 'image');
% image = addPointOnImage(obs.image, bpt_x, bpt_y, obs);
% imshow(image)

figure('Name', 'position');
plot(path(), y);

axis equal;

% 
% figure('Name', 'cost map');
% x_range = 1:obs.rows;
% y_range = 1:obs.cols;
% [X, Y] = meshgrid(x_range, y_range);
% surf(x_range, y_range, obs.cost_map);

% figure('Name', 'heading');
% plot(s_new, theta);
% 
% coef_kappa = diffSplineMatrix(1, cfg_th, s_new);
% kappa = coef_kappa * pth / sf;
% figure('Name', 'curvature');
% plot(s_new, kappa);